description: >
  Halts redundant CI runs if watched directories are unchanged

parameters:
  git_url:
    description: >
      [REQUIRED] Provide your pipeline.project.git_url
    type: string
  base_revision:
    description: >
      [REQUIRED] Provide your pipeline.git.base_revision
    type: string
  revision:
    description: >
      [REQUIRED] Provide your pipeline.git.revision
    type: string
  watch:
    description: >
      Directories to watch for changes, separated by spaces
    type: string
    default: ".circleci"

steps:
  - run:
      name: "[runtime-optimizer/halt-if-unchanged] - Halting if watch files are unchanged"
      command: |
        CIRCLE_COMPARE_URL="<<parameters.git_url>>/compare/<<parameters.base_revision>>..<<parameters.revision>>"
        if [ -z "$CIRCLE_COMPARE_URL" ]
        then
          echo "----------------------------------------------------------------------------------------------------"
          echo "Error - $CIRCLE_COMPARE_URL is not defined"
          echo "This is easy to fix - invoke this command by providing pipeline variables like so:"
          echo "ICBnaXRfdXJsOiA8PHBpcGVsaW5lLnByb2plY3QuZ2l0X3VybD4+" | base64 -d
          echo "ICBiYXNlX3JldmlzaW9uOiA8PHBpcGVsaW5lLmdpdC5iYXNlX3JldmlzaW9uPj4=" | base64 -d
          echo "ICByZXZpc2lvbjogPDxwaXBlbGluZS5naXQucmV2aXNpb24+Pg==" | base64 -d
          echo "ICB3YXRjaDogIi5jaXJjbGVjaS8iICMgcmVjb21tZW5kZWQ6IGxpc3Qgb2YgZGlyZWN0b3JpZXMgdG8gd2F0Y2g=" | base64 -d
          # ^^ using base64 encoding to bypass a conflict with circleci, where it thinks we actually inlined pipeline variables
          echo "----------------------------------------------------------------------------------------------------"
          exit 1
        fi
        echo "----------------------------------------------------------------------------------------------------"
        echo "Checking for changes:"
        echo $CIRCLE_COMPARE_URL
        echo "<<parameters.watch>>"
        echo "----------------------------------------------------------------------------------------------------"
        pwd
        ls -l
        echo "----------------------------------------------------------------------------------------------------"
        # Invoke script
        range() {
            echo "$1" | rev | cut -d/ -f1 | rev
        }

        last_run_commit() {
            echo "$1" | cut -d. -f 1 | cut -d^ -f 1
        }

        current_commit() {
            echo "$1" | cut -d. -f 4
        }

        compare_range=$(range $CIRCLE_COMPARE_URL)
        first=$(current_commit $compare_range)
        last=$(last_run_commit $compare_range)

        echo "Comparing changes for range ${last} to ${first}"

        output=$(git diff $last^ $first -- <<parameters.watch>> 2>&1)

        if [ $? -gt 0 ]; then
          echo "Error looking for changes!"
          exit 0
        elif [ -n "$output" ]; then
          echo "Changes detected - proceeding"
          exit 0
        else
          echo "No changes detected - halting job"
          circleci step halt
        fi
